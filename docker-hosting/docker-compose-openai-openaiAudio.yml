services:
  aitalkmaster:
    build:
      context: ../
      dockerfile: docker-hosting/aitalkmaster.Dockerfile
    container_name: aitalkmaster
    ports:
      - "7000:6000"
    networks:
      - streaming-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ../volumes/generated-audio:/app/generated-audio
      - ../volumes/aitalkmaster-logs:/app/logs
      - ../openai_key.txt:/app/openai_key.txt:ro
      - ../aitalkmaster-server/configs/docker-openai-openai.yml:/app/config.yml:ro
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6000/statusAitalkmaster"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  liquidsoap:
    build:
      context: ./
      dockerfile: liquidsoap.Dockerfile
    restart: unless-stopped
    volumes:
      - ../volumes/liquidsoap-logs:/var/log/liquidsoap
      - ../volumes/generated-audio:/generated-audio:ro
    environment:
      - LIQUIDSOAP_LOG_LEVEL=3
    depends_on:
      - icecast
    networks:
      - streaming-network

    # icecast configs lie in /etc/icecast2/icecast.xml
  icecast:
    #image: moul/icecast:latest
    build:
      context: ../
      dockerfile: docker-hosting/icecast.Dockerfile
    restart: unless-stopped
    ports:
      - "7010:8000" 
    environment:
      - ICECAST_SOURCE_PASSWORD=srcpassword
      - ICECAST_RELAY_PASSWORD=password
      - ICECAST_ADMIN_PASSWORD=password
      - ICECAST_PASSWORD=password
      - ICECAST_HOSTNAME=localhost
    volumes:
      - ../volumes/icecast-logs:/var/log/icecast2
    networks:
      - streaming-network

networks:
  streaming-network:
    driver: bridge